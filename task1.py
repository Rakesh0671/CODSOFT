# -*- coding: utf-8 -*-
"""Task1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12N-Av4IKhNUyFVfueIpMOVWe2mB9VT4_
"""



"""#Task-1:TITANIC SURVIVAL PREDICTION
#Author:Rakesh Kumar Sahoo
#Batch:June
#Domain:Data Science

```

```


"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""#Impoting Dataset"""

df= pd.read_csv("/content/Titanic-Dataset.zip")
df.head(10)

df.shape

df.describe()

"""From Above cell it is clear there are few missing values in age column

"""

df['Survived'].value_counts()

#visualize the count of survival wrt pclass
sns.countplot(x=df['Survived'],hue=df['Pclass'])

df['Sex']

sns.countplot(x=df['Sex'], hue=df['Survived'])

df.groupby('Sex')[['Survived']].mean()

df['Sex'].unique()

from sklearn.preprocessing import LabelEncoder
labelencoder=LabelEncoder()
df['Sex']=labelencoder.fit_transform(df['Sex'])
df.head()

df['Sex'],df['Survived']

sns.countplot(x=df['Sex'],hue=df['Survived'])

df.isna().sum()

df=df.drop(['Age'],axis=1)

df_final=df
df_final.head(10)

"""#model training


"""

X=df[['Pclass','Sex']]
Y=df['Survived']

from sklearn.model_selection import train_test_split
X_train, X_test, Y_test, Y_train=train_test_split(X, Y, test_size=0.2 , random_state=0)

from sklearn.linear_model import LogisticRegression

log=LogisticRegression(random_state=0)
log.fit(X_train, Y_test)

pred=print(log.predict(X_test))

print(Y_test)



import warnings
warnings.filterwarnings('ignore')

res=log.predict([[2,0]])

if(res==0):
  print("no one survived")
else:
  print("survived")